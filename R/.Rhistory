lines(x.val2,ac2,col="red")
delka_Vozu <- Cars93$Length
summary(delka_Vozu)
hist(delka_Vozu, plot = F)
hist(delka_Vozu)
tapply(Cars93$Length, Cars93$Origin, summary)
boxplot(Cars93$Length ~ Cars93$Origin)
# Jaka je variabilita delky vozu
delka <- Cars93$Length
var(delka)
sd(delka)
# Zakladni charakteristiky variability odvozene od prumeru
# Vyberovy rozptyl a smerodatna odchylka
# Jake maji jednotky, jak je interpretovat?
IQR(delka)
MAD(delka)
#############################
## Popisne statistiky variability
library(DescTools)
MAD(delka)
# Robustni charakteristiky variability mene citlive na odlehla pozorovani
# Mezikvartilove rozpeti a medianova absolutni odchylka okolo medianu
# Jake maji jednotky, jak je interpretovat?
CoefVar(delka)
# Standardizovane veliciny - z.skory
z.val<-scale(delka)
# Caharakteristiky tvaru rozdeleni
Skew(delka)
Kurt(delka)
# Caharakteristiky tvaru rozdeleni
hist(delka)
boxplot(delka)
# Standardizovane veliciny - z.skory
z.val<-scale(delka)
z.val
# Caharakteristiky tvaru rozdeleni
hist(delka)
col
colors
colors()
## Frekvencni rozdeleni pro ciselne promenne
# spoctete frekvencni rozdeleni pro silu vozu (Horse power)
hp <- Cars93$Horsepower
hist(hp,col="skyblue",border="darkblue",main="Histogram",
xlab="Sila vozu",ylab="Absolutni cetnosti")
hist(density(hp),col="skyblue",border="darkblue",main="Histogram",
xlab="Sila vozu",ylab="Absolutni cetnosti")
# Caharakteristiky tvaru rozdeleni
hist(delka, col = "tomato", main = "Histogram", ylab = "Absolutní četnosti", xlab = "Síla vozu")
hist(delka, col = "tomato", main = "Histogram", ylab = "Husota", xlab = "Síla vozu", freq = False)
hist(delka, col = "tomato", main = "Histogram", ylab = "Husota", xlab = "Síla vozu", freq = FALSE)
#hist(delka, col = "tomato", main = "Histogram", ylab = "Husota", xlab = "Síla vozu", freq = FALSE)
boxplot(delka)
mean(delka)
median(delka)
# Vyzkousejte pro promennou rm a nox
rm <-Boston$rm
boxplot(rm, col = "green", border = "black")
boxplot(rm, col = "green", border = "black", range = 3)
mean(rm)
median(rm)
nox <- Boston$nox
hist(nox, col = "violet", border = "white", xlab = "nox", main = "Histogram")
boxplot(nox, col = "salmon", border = "black")
mean(nox)
median(nox)
# Ohodnotte normalitu promenne rm
# vyska
rm <- Stulong$rm
# histogram - hodi se ho kreslit v "hustote"
hist(rm,col="skyblue",border="darkblue",main="Histogram",ylab="Hustota",
xlab="rm", freq=F)
# Ohodnotte normalitu promenne rm
# vyska
rm <- Stulong$rm
# histogram - hodi se ho kreslit v "hustote"
hist(rm,col="skyblue",border="darkblue",main="Histogram",ylab="Hustota",
xlab="rm", freq=F)
# Sikmost, spicatost
Skew(rm)
# Ohodnotte normalitu promenne rm
# vyska
rm <- Stulong$rm
rm
# Pomoci funkce
MeanCI(reakce,method="boot")
# Potrebne knihovny
library(fitdistrplus)
library(DescTools)
load("Stulong.RData")
# Nactete databazi Stulong.RData
names(Stulong)<-c("ID","vyska","vaha","syst1","syst2","chlst","vino","cukr","bmi",
"vek","KOURrisk","Skupina","VekK")
## Jake rozdeleni ma cholesterol?
chol <- Stulong$chlst
hist(chol,col="azure", border="darkblue", main="Histogram pro hladinu cholesterolu", xlab="Cholesterol")
PlotQQ(chol, pch=19)
Skew(chol)
Kurt(chol)
hist(chol,col="azure", border="darkblue", main="Histogram pro hladinu cholesterolu", xlab="Cholesterol")
PlotQQ(chol, pch=19)
# Pomer sikmosti a spicatosti, k jakemu rozdeleni mam nejblize
descdist(chol ,discrete=FALSE, boot=1000)
# zkusim normalni, logisticke a lognormalni
(fit1 <- fitdist(chol,"norm"))
(fit2 <- fitdist(chol,"logis"))
(fit3 <- fitdist(chol,"lnorm"))
# porovnani pomoci AIC a BIC kriterii
data.frame(distr=c("Norm","Logis","Lognorm"),
AIC=c(fit1$aic,fit2$aic,fit3$aic),
BIC=c(fit1$bic,fit2$bic,fit3$bic)
)
# 95%-ni intervaly spolehlivosti pro odhady parametru lognormalniho rozdeleni
data.frame(estimate=coef(fit3),
ci0.95lo=coef(fit3)-1.96*fit3$sd,
ci0.95up=coef(fit3)+1.96*fit3$sd
)
# kontrola, jak jednotlivym rozdelenim sedi Q-Q plot
PlotQQ(chol)
PlotQQ(chol, qdist=function(p) qlogis(p,location=coef(fit2)[1],scale=coef(fit2)[2]))
PlotQQ(chol, qdist=function(p) qlnorm(p,meanlog=coef(fit3)[1],sdlog=coef(fit3)[2]))
sys <- Stulong$syst1
hist(sys)
Skew(sys)
Kurt(sys)
descdist(sys ,discrete=FALSE, boot=1000)
(fit1 <- fitdist(sys, "norm"))
(fit2 <- fitdist(sys, "gamma"))
(fit3 <- fitdist(sys, "lnorm"))
data.frame(distr=c("Norm","Logis","Lognorm"),
AIC=c(fit1$aic,fit2$aic,fit3$aic),
BIC=c(fit1$bic,fit2$bic,fit3$bic)
)
PlotQQ(sys)
PlotQQ(sys, qdist=function(p) qlogis(p,location=coef(fit2)[1],scale=coef(fit2)[2]))
PlotQQ(sys, qdist=function(p) qlnorm(p,meanlog=coef(fit3)[1],sdlog=coef(fit3)[2]))
## Jakym rozdelenim se ridi cukr?
cukr <-Stulong$cukr
hist(cukr)
Skew(cukr)
Kurt(cukr)
PlotQQ(cukr)
descdist(cukr, discrete = FALSE, boot = 1000)
(fit1 <- fitdist(cukr, "exp"))
(fit2 <- fitdist(cukr, "gamma"))
(fit3 <- fitdist(cukr, "lnorm"))
PlotQQ(cukr, qdist=function(p) qexp(p,location=coef(fit1)[1],scale=coef(fit1)[2]))
(fit2 <- fitdist(cukr, "gamma"))
(fit3 <- fitdist(cukr, "lnorm"))
(fit1 <- fitdist(cukr, "exp"))
(fit2 <- fitdist(cukr, "gamma"))
(fit3 <- fitdist(cukr, "lnorm"))
n <- n(Price)
n <- length(Price)
# Kvantitativní (Numerické)
Price <- cars$Price
n <- length(Price)
n
# Kvantitativní (Numerické)
library(DescTools)
SD <- sd(Price)
SD
n <- length(Price)
Mean <- mean(Price)
sumary <- summary(Price)
SD <- sd(Price)
IQR <- IQR(Price)
MAD <- MAD(Price)
CoefVar <- CoefVar(Price)
Skew <- Skew(Price)
Kurt <- Kurt(Price)
data.frame("n" = n, "Mean" = Mean, "" = sumary)
data.frame("n" = n, "Mean" = Mean, "summary" = sumary)
data.frame("n" = n, "Mean" = Mean)
## popisne statistiky pro ordinalni promennou
# popiste, jake mely vozy Airbagy
ab <- Cars93$AirBags
unique
(ac <- table(ab))
(kac<-cumsum(ac))
(rc<-round(prop.table(table(ab)),2))
(krc<-cumsum(rc))
data.frame(cbind("n(i)"=ac,"N(i)"=kac,"f(i)"=rc,"F(i)"=krc))
data.frame(cbind("n" = n, "Mean" = Mean, sumary) )
data.frame(cbind("n" = n, "Mean" = Mean, "sumary" = sumary) )
data.frame(cbind("n" = n, "Mean" = Mean, "sumary" = cbind(sumary)) )
data.frame(cbind("n" = n, "Mean" = Mean))
data.frame("" = Price cbind("n" = n, "Mean" = Mean))
data.frame("" = "Price" cbind("n" = n, "Mean" = Mean))
data.frame("" = "Price" ,cbind("n" = n, "Mean" = Mean))
data.frame(" " = "Price" ,cbind("n" = n, "Mean" = Mean))
data.frame("\t" = "Price" ,cbind("n" = n, "Mean" = Mean))
data.frame("promm" = "Price" ,cbind("n" = n, "Mean" = Mean))
sumary[1]
data.frame("promm" = "Price" ,cbind("n" = n, "Mean" = Mean, sumary[1]))
data.frame("promm" = "Price" ,cbind("n" = n, "Mean" = Mean, sumary[3]))
data.frame("promm" = "Price" ,cbind("n" = n, "Mean" = Mean), sumary[3] )
data.frame("promm" = "Price" ,cbind("n" = n, "Mean" = Mean, "Min" = sumary[1], "1st Qu" = sumary[2], "Median" = sumary[3], "3rd Qu" = sumary[4], "Max" = sumary[5]))
data.frame("promm" = "Price" ,cbind("n" = n, "Mean" = Mean, "Min" = sumary[1], "1st Qu" = sumary[2], "Median" = sumary[3], "3rdQu" = sumary[4], "Max" = sumary[5]))
sumary <- summary(Price)
sumary
data.frame(do.call(rbind, sumary)
data.frame(do.call(rbind, sumary))
data.frame("promm" = "Price" ,cbind("n" = n, "Mean" = Mean, "Min" = sumary[1], "First Qu" = sumary[2], "Median" = sumary[3], "3rdQu" = sumary[4], "Max" = sumary[5]))
data.frame("promm" = "Price" ,cbind("n" = n, "Mean" = Mean, "Min" = sumary[1], "First Qu" = sumary[2], "Median" = sumary[3], "ThirdQu" = sumary[4], "Max" = sumary[5]))
data.frame("promm" = "Price" ,cbind("n" = n, "Mean" = Mean, "Min" = sumary[1], "First Qu" = sumary[2], "Median" = sumary[3], "Third Qu" = sumary[4], "Max" = sumary[5]))
data.frame(promm = "Price" ,cbind("n" = n, "Mean" = Mean, "Min" = sumary[1], "First Qu" = sumary[2], "Median" = sumary[3], "Third Qu" = sumary[4], "Max" = sumary[5]))
data.frame( "Price" ,cbind("n" = n, "Mean" = Mean, "Min" = sumary[1], "First Qu" = sumary[2], "Median" = sumary[3], "Third Qu" = sumary[4], "Max" = sumary[5]))
data.frame( prom = "Price" ,cbind("n" = n, "Mean" = Mean, "Min" = sumary[1], "First Qu" = sumary[2], "Median" = sumary[3], "Third Qu" = sumary[4], "Max" = sumary[5]))
data.frame( prom = "Price" ,cbind("n" = n, "Mean" = Mean, "Min" = sumary[1], 1stQU = sumary[2], "Median" = sumary[3], "Third Qu" = sumary[4], "Max" = sumary[5]))
data.frame( prom = "Price" ,cbind("n" = n, "Mean" = Mean, "Min" = sumary[1], 1st.Qu = sumary[2], "Median" = sumary[3], "Third Qu" = sumary[4], "Max" = sumary[5]))
data.frame( prom = "Price" ,cbind("n" = n, "Mean" = Mean, "Min" = sumary[1], "First Qu" = sumary[2], "Median" = sumary[3], "Third Qu" = sumary[4], "Max" = sumary[5]))
data.frame( prom = "Price" ,"n" = n, "Mean" = Mean, "Min" = sumary[1], "First Qu" = sumary[2], "Median" = sumary[3], "Third Qu" = sumary[4], "Max" = sumary[5])
data.frame( prom = "Price" ,"n" = n, "Mean" = Mean, "Min" = sumary[1], "First Qu" = sumary[2], "Median" = sumary[3], "Third Qu" = sumary[4], "Max" = sumary[5])
data.frame( prom = "Price" ,cbind("n" = n,
"Mean" = Mean,
"Min" = sumary[1],
"First Qu" = sumary[2],
"Median" = sumary[3],
"Third Qu" = sumary[4],
"Max" = sumary[5]),
"SD" = SD,
"IQR" = IQR,
"MAD" = MAD,
"CoefVar" = CoefVar,
"Skew" = Skew,
"Kurt" = Kurt
)
Huber <- huber(Price)
Huber
hubers(Price)
HuberM(Price)
Huber <- HuberM(Price)
data.frame( prom = "Price" ,cbind("n" = n,
"Mean" = Mean,
"Huber" = Huber,
"Min" = sumary[1],
"First Qu" = sumary[2],
"Median" = sumary[3],
"Third Qu" = sumary[4],
"Max" = sumary[5]),
"SD" = SD,
"IQR" = IQR,
"MAD" = MAD,
"CoefVar" = CoefVar,
"Skew" = Skew,
"Kurt" = Kurt
)
Price <- cars$Price
prom <- Price
n <- length(prom)
Mean <- mean(prom)
Huber <- HuberM(prom)
sumary <- summary(prom)
SD <- sd(prom)
IQR <- IQR(prom)
MAD <- MAD(prom)
CoefVar <- CoefVar(prom)
Skew <- Skew(prom)
Kurt <- Kurt(prom)
data.frame(do.call(rbind, sumary))
Price <- cars$Price
prom <- Price
n <- length(prom)
Mean <- mean(prom)
Huber <- HuberM(prom)
sumary <- summary(prom)
SD <- sd(prom)
IQR <- IQR(prom)
MAD <- MAD(prom)
CoefVar <- CoefVar(prom)
Skew <- Skew(prom)
Kurt <- Kurt(prom)
data.frame(do.call(rbind, sumary))
Price <- cars$Price
prom <- Price
n <- length(prom)
Mean <- mean(prom)
Huber <- HuberM(prom)
sumary <- summary(prom)
SD <- sd(prom)
IQR <- IQR(prom)
MAD <- MAD(prom)
CoefVar <- CoefVar(prom)
Skew <- Skew(prom)
Kurt <- Kurt(prom)
data.frame(do.call(rbind, sumary))
data.frame(prom = prom ,cbind("n" = n,
"Mean" = Mean,
"Huber" = Huber,
"Min" = sumary[1],
"First Qu" = sumary[2],
"Median" = sumary[3],
"Third Qu" = sumary[4],
"Max" = sumary[5]),
"SD" = SD,
"IQR" = IQR,
"MAD" = MAD,
"CoefVar" = CoefVar,
"Skew" = Skew,
"Kurt" = Kurt
)
data.frame(prom = "Price" ,cbind("n" = n,
"Mean" = Mean,
"Huber" = Huber,
"Min" = sumary[1],
"First Qu" = sumary[2],
"Median" = sumary[3],
"Third Qu" = sumary[4],
"Max" = sumary[5]),
"SD" = SD,
"IQR" = IQR,
"MAD" = MAD,
"CoefVar" = CoefVar,
"Skew" = Skew,
"Kurt" = Kurt
)
## Zavisi porodni hmotnost na porodni delce deti?
zavisla <- Kojeni$porHmotnost
nezavisla <- Kojeni$porDelka
# nejprve graf
plot(zavisla ~ nezavisla, pch=19,main="Graf zavislosti dvou ciselnych promennych",
xlab="Porodni delka",ylab="Porodni hmotnost")
# korelacni koeficient
cor(zavisla, nezavisla)
# Je tato zavislost statisticky vyznamna?
#   H0: promenne spolu nesouvisi vs. H1: promenne spolu souvisi
cor.test(zavisla, nezavisla)
# linearni regrese
abline(lm(zavisla ~ nezavisla),col=2,lwd=2)
# grafem prolozim primku
(Model1 <- lm(zavisla ~ nezavisla))
# odhad regresnich koeficientu - popis primky
# porodni hmotnost = -7905.8 + 224.8*porodni delka
#   je dulezite, ktera promenna je na x-ove a ktera na y-ove ose
# s narustem porodni delky o 1cm naroste porodni hmotnost v promeru o 224.8 g
summary(Model1)
# souhrn vystupu
# v casti Coefficients najdeme odhady regresnich koeficientu (Estimate)
#   a dale test o jejich nulovosti (kdyz je posledni hodnota v radku
#   Pr(>|t|) mensi nez 0.05, pak se koeficient vyznamne lisi od nuly,
#   a za posledni hodnotou se objevi alespon jedna hvezdicka)
# v souhrnu Multiple R-squared je procento variability zavisle promenne
#   vysvetlene modelem: z variability porodni hmotnosti se vysvetlilo 62.5%
confint(Model1)
## Jak zavisi hmotnost v pul roce na porodni hmotnosti?
zavisla <- Kojeni$hmotnost
nezavisla <- Kojeni$porHmotnost
plot(zavisla ~ nezavisla)
abline(lm(zavisla ~ nezavisla), col = 2, lwd = 2)
(Model2 <- lm(zavisla ~ nezavisla))
# hmotnost = 4839.3 + 0.8215*porodni hmotnost
#   na jeden gram porodni hmotnosti pripada v prumeru 0.8215 gramu hmotnosti v pul roce
summary(Model2)
# modelem se vysvetlilo 18.4% variability hmotnosti v pul roce
confint(Model2)
## A co kdyz do modelu pridame jeste delku?
#  Zavisi hmotnost deti v pul roce na jejich delce a na porodni hmotnosti?
nezavisla2 <- Kojeni$delka
(Model3 <- lm(zavisla ~ nezavisla + nezavisla2))
# hmotnost = -413 + 0.5837*porodni hmotnost + 88.66*delka
#   na jeden gram porodni hmotnosti pripada v prumeru 0.5837 gramu hmotnosti v pul roce
#      pri stejne delce v pul roce
#   na jeden centimetr delky v pul roce pripada v prumeru 88.66 gramu hmotnosti
#      pri stejne porodni hmotnosti
summary(Model3)
# modelem se vysvetlilo 28.7% variability hmotnosti v pul roce
# pridani dalsi promenne vyrazne pomohlo
confint(Model3)
# zmena typu promenne kvuli popiskum na y-ove ose v grafu
plot(x.val,ac.n,type="h",lwd=3,col="darkgreen",main="Frekvencni polygon",
xlab="Pocet valcu",ylab="Absolutni cetnosti")
plot(x.val,ac.n,type="h",lwd=3,col="darkgreen",main="Frekvencni polygon",
xlab="Počet pasažérů",ylab="Absolutni cetnosti")
ac2<-rep(0,length(x.val2))
barplot(table(Por.poh),col=2:5,main="Sloupcovy graf")
# histogram - budeme prokladat hustotu, je treba ji tedy uvazovat i na y-ove ose
hist(vyska,col="skyblue",border="darkblue",main="Histogram",ylab="Hustota",
xlab="Vyska v cm",freq=F)
# mozno pouzit i vice sloupcu
hist(vyska,col="skyblue",border="darkblue",main="Histogram",ylab="Hustota",
xlab="Vyska v cm",breaks=15,freq=F)
# prolozime jadrovy odhad hustoty
(jadro <- density(vyska))
lines(jadro,col=2, lwd = 3)
#BARPLOT
barplot(table(Por.poh),col=2:5,main="Sloupcovy graf")
valce <- cars$Cylinders
(ac <- table(valce))
# zmena typu promenne kvuli popiskum na y-ove ose v grafu
plot(x.val,ac.n,type="h",lwd=3,col="darkgreen",main="Frekvencni polygon",
xlab="Pocet valcu",ylab="Absolutni cetnosti")
x.val2<-min(x.val):max(x.val)
ac2<-rep(0,length(x.val2))
for(i in 1:length(x.val2)){
for(j in 1:length(x.val)){
if(x.val2[i]==x.val[j]){ac2[i]<-ac[j]}}
}
lines(x.val2,ac2,col="red")
# Frekvencni polygon
x.val<-as.numeric(as.character(names(ac)))
ac.n<-as.numeric(ac)
# zmena typu promenne kvuli popiskum na y-ove ose v grafu
plot(x.val,ac.n,type="h",lwd=3,col="darkgreen",main="Frekvencni polygon",
xlab="Pocet valcu",ylab="Absolutni cetnosti")
x.val2<-min(x.val):max(x.val)
ac2<-rep(0,length(x.val2))
for(i in 1:length(x.val2)){
for(j in 1:length(x.val)){
if(x.val2[i]==x.val[j]){ac2[i]<-ac[j]}}
}
lines(x.val2,ac2,col="red")
hp <- Cars93$Horsepower
hist(hp,col="skyblue",border="darkblue",main="Histogram",
xlab="Sila vozu",ylab="Absolutni cetnosti")
hist(hp,col="skyblue",border="darkblue",main="Histogram",
xlab="Sila vozu",ylab="Absolutni cetnosti",breaks=10)
# pomoci parametru "breaks" je mozne nastavit i jemnejsi deleni,
#   ale pro tabulku frekvencniho rozdeleni asi neni treba
hist(hp,plot=F)
deleni<-hist(hp,plot=F)$breaks
popis<-as.character(deleni[-1])
for(i in 1:length(popis)){
popis[i]<-paste("(",deleni[i],",",deleni[i+1],"]")
}
ac<-hist(hp,plot=F)$counts
kac<-cumsum(ac)
rc<-round(ac/sum(ac),3)
krc<-cumsum(rc)
names(ac) <- popis
data.frame("n(i)"=ac,"N(i)"=kac,"f(i)"=rc,"F(i)"=krc)
# Krabicovy graf
boxplot(hp,col="yellow",border="orange3",main="Krabicovy graf",
ylab="Sila vozu")
# samostatne body ukazuji odlehla pozorovani
boxplot(hp,col="yellow",border="orange3",main="Krabicovy graf",
ylab="Sila vozu",range = 3)
#histogram
hist(hp)
(jadro <- density(hp))
lines(jadro,col=2, lwd = 3)
#histogram
hist(hp, freq = F)
(jadro <- density(hp))
lines(jadro,col=2, lwd = 3)
summary(hp)
#histogram
hist(hp, freq = F)
(jadro <- density(hp, bw = 3))
lines(jadro,col=2, lwd = 3)
(jadro <- density(hp, bw = 2))
lines(jadro,col=2, lwd = 3)
#histogram
hist(hp, freq = F)
(jadro <- density(hp, bw = 2))
lines(jadro,col=2, lwd = 3)
#histogram
hist(hp, freq = F)
(jadro <- density(hp, bw = 1))
lines(jadro,col=2, lwd = 3)
(jadro <- density(hp, bw = 5))
lines(jadro,col=2, lwd = 3)
#histogram
hist(hp, freq = F)
(jadro <- density(hp, bw = 5))
lines(jadro,col=2, lwd = 3)
(jadro <- density(hp))
lines(jadro,col=2, lwd = 3)
#histogram
hist(hp, freq = F)
(jadro <- density(hp))
lines(jadro,col=2, lwd = 3)
#histogram
hist(hp, col="skyblue",border="darkblue",main="Histogram",ylab="Hustota",
xlab="Síla vozu (hp)",breaks=15,freq = F)
(jadro <- density(hp))
lines(jadro,col=2, lwd = 3)
# Frekvencni polygon
x.val<-as.numeric(as.character(names(ac)))
ac.n<-as.numeric(ac)
# zmena typu promenne kvuli popiskum na y-ove ose v grafu
plot(x.val,ac.n,type="h",lwd=3,col="darkgreen",main="Frekvencni polygon",
xlab="Pocet valcu",ylab="Absolutni cetnosti")
valce <- cars$Cylinders
# Frekvencni polygon
x.val<-as.numeric(as.character(names(ac)))
ac.n<-as.numeric(ac)
# zmena typu promenne kvuli popiskum na y-ove ose v grafu
plot(x.val,ac.n,type="h",lwd=3,col="darkgreen",main="Frekvencni polygon",
xlab="Pocet valcu",ylab="Absolutni cetnosti")
valce <- cars$Cylinders
(ac <- table(valce))
#valce bez rotary
valce2 <- droplevels(valce[valce != "rotary"])
(ac<-table(valce2))
(kac<-cumsum(ac))
(rc<-round(prop.table(table(valce2)),2))
(krc<-cumsum(rc))
data.frame(cbind("n(i)"=ac,"N(i)"=kac,"f(i)"=rc,"F(i)"=krc))
# Frekvencni polygon
x.val<-as.numeric(as.character(names(ac)))
ac.n<-as.numeric(ac)
# zmena typu promenne kvuli popiskum na y-ove ose v grafu
plot(x.val,ac.n,type="h",lwd=3,col="darkgreen",main="Frekvencni polygon",
xlab="Pocet valcu",ylab="Absolutni cetnosti")
x.val2<-min(x.val):max(x.val)
ac2<-rep(0,length(x.val2))
for(i in 1:length(x.val2)){
for(j in 1:length(x.val)){
if(x.val2[i]==x.val[j]){ac2[i]<-ac[j]}}
}
lines(x.val2,ac2,col="red")
