library(MASS)
data(Boston)
prom2<-Boston.kat$rad
# faktory ovlivnujici cenu nemovitosti na predmesti Bostonu
?Boston
# kategoricke promenne databaze Boston
tax.k <- Boston$tax %/% 100
land.z <- Boston$zn %/% 10
Boston.kat <- data.frame(cbind("chas"=Boston$chas, "rad" = Boston$rad, tax.k, land.z))
prom2<-Boston.kat$rad
prom3<-Boston.kat$tax.k
(tab<-table(prom2,prom3))
# mozna lepe videt z relativnich cetnosti
round(addmargins(prop.table(tab)), 3)
round(addmargins(prop.table(tab,1)), 3)
round(addmargins(prop.table(tab,2)), 3)
# Jaky je vztah mezi promennymi rm a age?
prom1 <- Boston$age
prom2 <- Boston$rm
plot(prom1 ~ prom2,pch=19,main="Rozptylovy graf",xlab="Rm",ylab="Age")
cov(prom1,prom2,use="complete.obs")
# co Vam rika kovariance
cor(prom1,prom2,use="complete.obs")
prom1
prom2
max(prom2)
## Souvisi spolu reakcni doba a procento tuku?
reak <- Policie$react
library(DescTools)
library(TeachingDemos)
library(TeachingDemos)
# Ohodnotte normalitu promenne vaha
vaha <- Policie$weight
data("Policie")
load("Policie.RData")
fat <- Policie$fat
## Souvisi spolu reakcni doba a procento tuku?
reak <- Policie$react
plot(reak ~ fat, main = "Rozptylovy graf", pch = 19, xlab = "Procento tuku", ylab = "Reakční doba")
abline(lm(reak ~ fat), col = 2, lwd = 2)
cor(reak, fat, use="complete.obs")
cor.test(reak, fat)
## Souvisi spolu vyska a procento tuku?
vyska <- Policie$height
fat <- Policie$fat
plot(vyska ~ fat, main = "Rozptylovy graf", pch = 19, xlab = "Procento tuku")
abline(lm(vyska ~ fat), col = 2, lwd = 2)
cor(vyska, fat, use="complete.obs")
cor.test(vyska, fat, method = "spearman")
## Jaky je vztah mezi vahou a vyskou?
# Graficky pomoci bodoveho grafu
vaha <- Policie$weight
vyska <- Policie$height
plot(vaha ~ vyska, pch=19,main="Rozptylovy graf",xlab="Vyska v cm",ylab="Vaha v kg")
# Co z grafu vidite?
abline(lm(vaha ~ vyska), col=2, lwd=2)
# Korelacni koeficient
cor(vaha, vyska, use="complete.obs")
## Souvisi spolu pulse a vaha?
puls <- Policie$pulse
# Rozptylovy graf
plot(puls ~ vaha, pch=19,main="Rozptylovy graf",xlab="Vaha v kg",ylab="Puls bpm")
abline(lm(puls ~ vaha), col=2, lwd=2)
# Korelacni koeficient
cor(puls, vaha, use="complete.obs")
## Test o vyznamnosti korelacniho koeficientu (test o linearni zavislosti)
# Testovane hypotezy
#   H0: promenne spolu linearne nesouvisi (cor = 0) vs. H1: promenne spolu souvisi (cor <> 0)
cor.test(puls, vaha)
cor.test(vaha,vyska)
## Souvisi spolu barva vlasu a pohlavi?
# testovane hypotezy
#   H0: barva vlasu a pohlavi spolu nesouvisi
#   H1: barva vlasu a pohlavi spolu souvisi
(tab <- HairEyeColor[,1,])
# tabulka absolutnich cetnosti
addmargins(tab)
# prikaz pro vypocet chi-kvadrat testu je chisq.test
chisq.test(tab)
# zakladni volani testu
# test porovnava pozorovane a ocekavane cetnosti
chisq.test(tab)$obs
chisq.test(tab)$exp
# neni-li splnen predpoklad, pouziva se Fisheruv exaktni test
fisher.test(tab)
## Souvisi spolu barva vlasu a barvaoci u muzu?
(tab <- HairEyeColor[,,1])
chisq.test(tab)
chisq.test(tab)$exp
chisq.test(tab)
#p-hodnota 4.447 * e-06 < 0.05 zamitame H0, plati H1 (souvisi spolu)
fisher.test(tab)
## Souvisi spolu pocet valu a pocet rychlosti u osobnich vozu?
data("mtcars")
auta <- mtcars
valce <- auta$cyl
rychlosti <- auta$gear
# nacteni dat
tab <- table(valce, rychlosti)
# nacteni dat
(tab <- table(valce, rychlosti))
chisq.test(tab)
fisher.test(tab)
chisq.test(tab)$exp
fisher.test(tab)
#p-hodnota = 0.0000082 < 0.05 H0 zamitame, plati H1 (souvisi)
plot(as.factor(valce) ~ as.factor(rychlosti), col = 2:4)
# hustota - vyska dospelych muzu
curve(dnorm(x,180,7),from=150,to=210, main="Hustota N(180, 49)",col="red",ylab="Hustota")
# distribucni funkce - vyska dospelych muzu
curve(pnorm(x,180,7),from=150,to=210, main="Distribucni funkce N(180, 49)",col="purple",ylab="Hustota")
# pravdepodobnost, ze nahodne vybrany muz bude mensi nez 170 cm
oldpar <- par(mfrow=c(1,2))
curve(dnorm(x,180,7),from=150,to=210, main="Hustota N(180, 49)")
lines(c(0,170),c(0,0),lwd=3,col="green")
xx <- seq(150,170,length.out=101)
polygon(c(150,xx,170),c(0,dnorm(xx,180,7),0),col="green")
curve(pnorm(x,180,7),from=150,to=210, main="Distr. fce N(180, 49)")
lines(c(170,170),c(0,pnorm(170,180,7)),col="green",lty=2,lwd=2)
lines(c(0,170),c(pnorm(170,180,7),pnorm(170,180,7)),col="green",lty=2,lwd=2)
# hodnotu lze vycist z distribucni funkce
par(oldpar)
# H0: vyska = 180 cm vs. H1: vyska <> 180 cm
vyska <- Policie$height
t.test(vyska, mu=180)
hmotnost <- Policie$weight
t.test(hmotnost, mu = 75)
## Pomoci jednovyberoveho t-testu na hladine vyznamnosti 5% rozhodnete,
#   zda prumerna hmotnost policistu je mensi nez 80 kg.
t.test(hmotnost, mu = 80)
## Spoctete 95% interval spolehlivosti pro prumer vysky kdyz vite,
#  ze rozptyl vysky dospelych muzu je 49.
vyska <- Policie$height
# Rucni vypocet
mn <- mean(vyska)
sd <- sqrt(49)
n <- length(vyska)
alpha <- 0.05
q.n <- qnorm(1-alpha/2)
# Dolni mez
mn-q.n*sd/sqrt(n)
# Horni mez
mn+q.n*sd/sqrt(n)
# vypocet pomoci funkce v knihovne DescTools
library(DescTools)
MeanCI(prom2,sd=sd)
# vypocet pomoci funkce v knihovne DescTools
MeanCI(vyska)
# dostavam sirsi interval nez predtim, proc?
# spojitost s jednovyberovym t-testem
# interval spolehlivosti je soucasti vystupu z jednovyberoveho t-testu
t.test(vyska, mu = 0)
## Spoctete 99%-ni interval spolehlivosti pro stredni hodnotu reakcni doby,
#  kdyz vim, ze rozptyl je 0.015 a kdyz nevim nic.
MeanCI( , conf.level=0.99)
###################################
## A jak spocitat interval spolehlivosti pro stredni hodnotu reakcni doby
#  pomoci bootstrapu?
reakce <- Policie$react
boots <- list()
B <- 10000
for(i in 1:B) boots[[i]] <- sample(reakce,replace=TRUE)
# bootstrapove vybery
means <- unlist(lapply(boots,mean))
hist(means,col="honeydew2",xlab="reakcni doba",
main="Histogram bootstrapovych prumeru")
abline(v=mean(reakce),lwd=3,col="navy")
abline(v=quantile(means,probs=c(0.025,0.975)),lwd=3,col="red")
c(mean=mean(reakce),quantile(means,probs=c(0.025,0.975)))
# Pomoci funkce
MeanCI(reakce,method="boot")
BootCI(reakce,FUN = mean)
# pomoci parametru FUN mohu pocitat interval spolehlivosti pro libovolnou funkci
decil <- function(x) quantile(x,0.1)
BootCI(prom3,FUN = decil)
## Spoctete 95% interval splehlivosti pro podil voyu s automatickou prevodovkou.
am <- mtcars$am
table(am)
table(am)[1]
# vypocet pomoc funkce z balicku DescTools
BinomCI(table(am)[1], n, method ="wald")
otec <- Kojeni$Otec
table(otec)
load("Kojeni.RData")
otec <- Kojeni$Otec
table(otec)
# u porodu bylo pritomno 36 otcu
round(prop.table(table(otec)), 4) * 100
BinomCI(table(otec)[2], sum(table(otec)), method = "wald")
## Spoctete 90%-ni interval spolehlivosti pro podil deti,
#  ktere byly jeste v pul roce kojeny (promenna Koj24)
koj <- Kojeni$Koj24
table(koj)
BinomCI(table(koj)[1], sum(table(koj)) , method = "wald", conf.level = 0.9)
## Zavisi porodni hmotnost na porodni delce deti?
zavisla <- Kojeni$porHmotnost
nezavisla <- Kojeni$porDelka
# nejprve graf
plot(zavisla ~ nezavisla, pch=19,main="Graf zavislosti dvou ciselnych promennych",
xlab="Porodni delka",ylab="Porodni hmotnost")
# korelacni koeficient
cor(zavisla, nezavisla)
# Je tato zavislost statisticky vyznamna?
#   H0: promenne spolu nesouvisi vs. H1: promenne spolu souvisi
cor.test(zavisla, nezavisla)
# linearni regrese
abline(lm(zavisla ~ nezavisla),col=2,lwd=2)
# grafem prolozim primku
(Model1 <- lm(zavisla ~ nezavisla))
# odhad regresnich koeficientu - popis primky
# porodni hmotnost = -7905.8 + 224.8*porodni delka
#   je dulezite, ktera promenna je na x-ove a ktera na y-ove ose
# s narustem porodni delky o 1cm naroste porodni hmotnost v promeru o 224.8 g
summary(Model1)
# souhrn vystupu
# v casti Coefficients najdeme odhady regresnich koeficientu (Estimate)
#   a dale test o jejich nulovosti (kdyz je posledni hodnota v radku
#   Pr(>|t|) mensi nez 0.05, pak se koeficient vyznamne lisi od nuly,
#   a za posledni hodnotou se objevi alespon jedna hvezdicka)
# v souhrnu Multiple R-squared je procento variability zavisle promenne
#   vysvetlene modelem: z variability porodni hmotnosti se vysvetlilo 62.5%
confint(Model1)
## Jak zavisi hmotnost v pul roce na porodni hmotnosti?
zavisla <- Kojeni$hmotnost
nezavisla <- Kojeni$porHmotnost
plot(zavisla ~ nezavisla)
abline(lm(zavisla ~ nezavisla), col = 2, lwd = 2)
(Model2 <- lm(zavisla ~ nezavisla))
# hmotnost = 4839.3 + 0.8215*porodni hmotnost
#   na jeden gram porodni hmotnosti pripada v prumeru 0.8215 gramu hmotnosti v pul roce
summary(Model2)
# hmotnost = 4839.3 + 0.8215*porodni hmotnost
#   na jeden gram porodni hmotnosti pripada v prumeru 0.8215 gramu hmotnosti v pul roce
summary(Model2)
# modelem se vysvetlilo 18.4% variability hmotnosti v pul roce
confint(Model2)
## A co kdyz do modelu pridame jeste delku?
#  Zavisi hmotnost deti v pul roce na jejich delce a na porodni hmotnosti?
nezavisla2 <- Kojeni$delka
(Model3 <- lm(zavisla ~ nezavisla + nezavisla2))
# hmotnost = -413 + 0.5837*porodni hmotnost + 88.66*delka
#   na jeden gram porodni hmotnosti pripada v prumeru 0.5837 gramu hmotnosti v pul roce
#      pri stejne delce v pul roce
#   na jeden centimetr delky v pul roce pripada v prumeru 88.66 gramu hmotnosti
#      pri stejne porodni hmotnosti
summary(Model3)
# modelem se vysvetlilo 28.7% variability hmotnosti v pul roce
# pridani dalsi promenne vyrazne pomohlo
confint(Model3)
## A kdyz pridame do modelu jeste porodni delku?
nezavisla3 <- Kojeni$porDelka
(Model4 <- lm(zavisla ~ nezavisla + nezavisla2 + nezavisla3))
summary(Model4)
confint(Model4)
# Testy predpokladu - nejsou v zapoctu, zkouska teoreticky
oldpar <- par(mfrow = c(2,2))
plot(Model3)
par(oldpar)
library(car)
vif(Model3)
# testuje se multikolinearita - nemelo by byt vetsi nez 5
avPlots(Model3)
## Jake rozdeleni ma cholesterol?
chol <- Stulong$chlst
# Nactete databazi Stulong.RData
names(Stulong)<-c("ID","vyska","vaha","syst1","syst2","chlst","vino","cukr","bmi",
"vek","KOURrisk","Skupina","VekK")
library(DescTools)
# Potrebne knihovny
library(fitdistrplus)
# Nactete databazi Stulong.RData
names(Stulong)<-c("ID","vyska","vaha","syst1","syst2","chlst","vino","cukr","bmi",
"vek","KOURrisk","Skupina","VekK")
load("Stulong.RData")
# Nactete databazi Stulong.RData
names(Stulong)<-c("ID","vyska","vaha","syst1","syst2","chlst","vino","cukr","bmi",
"vek","KOURrisk","Skupina","VekK")
## Jake rozdeleni ma cholesterol?
chol <- Stulong$chlst
hist(chol,col="azure", border="darkblue", main="Histogram pro hladinu cholesterolu", xlab="Cholesterol")
PlotQQ(chol, pch=19)
Skew(chol)
Kurt(chol)
# Pomer sikmosti a spicatosti, k jakemu rozdeleni mam nejblize
descdist(chol ,discrete=FALSE, boot=1000)
# zkusim normalni, logisticke a lognormalni
(fit1 <- fitdist(chol,"norm"))
(fit2 <- fitdist(chol,"logis"))
(fit3 <- fitdist(chol,"lnorm"))
# porovnani pomoci AIC a BIC kriterii
data.frame(distr=c("Norm","Logis","Lognorm"),
AIC=c(fit1$aic,fit2$aic,fit3$aic),
BIC=c(fit1$bic,fit2$bic,fit3$bic)
)
# 95%-ni intervaly spolehlivosti pro odhady parametru lognormalniho rozdeleni
data.frame(estimate=coef(fit3),
ci0.95lo=coef(fit3)-1.96*fit3$sd,
ci0.95up=coef(fit3)+1.96*fit3$sd
)
library(TeachingDemos)
clt.examp(1)
clt.examp(2)
clt.examp(5)
clt.examp(10)
# hustota - vyska dospelych muzu
curve(dnorm(x,180,7),from=150,to=210, main="Hustota N(180, 49)",col="red",ylab="Hustota")
# distribucni funkce - vyska dospelych muzu
curve(pnorm(x,180,7),from=150,to=210, main="Distribucni funkce N(180, 49)",col="purple",ylab="Hustota")
# pravdepodobnost, ze nahodne vybrany muz bude mensi nez 170 cm
oldpar <- par(mfrow=c(1,2))
curve(dnorm(x,180,7),from=150,to=210, main="Hustota N(180, 49)")
lines(c(0,170),c(0,0),lwd=3,col="green")
xx <- seq(150,170,length.out=101)
polygon(c(150,xx,170),c(0,dnorm(xx,180,7),0),col="green")
curve(pnorm(x,180,7),from=150,to=210, main="Distr. fce N(180, 49)")
lines(c(170,170),c(0,pnorm(170,180,7)),col="green",lty=2,lwd=2)
lines(c(0,170),c(pnorm(170,180,7),pnorm(170,180,7)),col="green",lty=2,lwd=2)
# hodnotu lze vycist z distribucni funkce
par(oldpar)
# Ohodnotte normalitu promenne vaha
vaha <- Policie$weight
# histogram
hist(vaha, main="Histogram",xlab="Vaha v kg",ylab="Absolutni cetnosti",
col="skyblue",border="darkblue")
# s hustotou normalniho rozdeleni
hist(vaha ,main="Histogram",xlab="Vaha v kg",ylab="Hustota",
col="skyblue",border="darkblue",freq=F)
# je treba vykreslit histogram prepocteny na hustotu
lines(x<-seq(50,140,by=0.2),dnorm(x,mean(vaha),sd(vaha)),col=2)
# Graficky test: Q-Q plot - Quantile Comparison plot
PlotQQ(vaha, pch=19)
length(vaha)
# Pro "rozumne" velka data (od 50 do cca 300 pozorovani)
#   je mozne vypocitat i ciselny test normality
# Testujeme
#   H0: data maji normalni rozdeleni vs. H1: data nemaji normalni rozdeleni
shapiro.test(vaha)
# p-hodnota 0.2045 > alfa 0.05 => H0 nezamitame
# data maji priblizne normalni rozdeleni
LillieTest(vaha)
AndersonDarlingTest(vaha,"pnorm",mean=mean(vaha),sd=sd(vaha))
## Otestujte normalitu promenne fat (procento tuku), a promenne pulse (puls).
fat <- Policie$fat
hist(fat)
PlotQQ(fat, pch=19)
shapiro.test(fat)
pulse <- Policie$pulse
hist(pulse)
PlotQQ(pulse, pch=19)
shapiro.test(pulse)
pgeom(2,0.035)
pgeom(88,0.035)
pgeom(98,0.035)
pbinom(2, 100 ,0.035)
1 - pbinom(1, 100 ,0.035)
dbinom(2,100,0.035)
sum(dbinom(2:100,100,0.035))
sum(dbinom(3:5,100,0.035))
pbinom(5, 100 ,0.035) - pbinom(2, 100, 0.035)
pbinom(5, 100 ,0.035) - pbinom(3, 100, 0.035)
dbinom(2,20,0.02)
dbinom(20,20,0.02)
sum(dbinom(20:0,20,0.02))
dbinom(0,20,0.02)
sum(dbinom(2:0,20,0.02))
pbinom(2,20,0.02)
dgeom(5,0.20)
1 - pgeom(4,0.20)
pgeom(4,0.20)
# hustota - vyska dospelych muzu
curve(dnorm(x,180,7),from=150,to=210, main="Hustota N(180, 49)",col="red",ylab="Hustota")
# distribucni funkce - vyska dospelych muzu
curve(pnorm(x,180,7),from=150,to=210, main="Distribucni funkce N(180, 49)",col="purple",ylab="Hustota")
curve(dnorm(x,180,15),from=150,to=210, main="Hustota N(180, 49)",col="red",ylab="Hustota")
curve(dnorm(x,180,3),from=150,to=210, main="Hustota N(180, 49)",col="red",ylab="Hustota")
curve(dnorm(x,180,15),from=150,to=210, main="Hustota N(180, 49)",col="red",ylab="Hustota")
curve(dnorm(x,180,30),from=150,to=210, main="Hustota N(180, 49)",col="red",ylab="Hustota")
curve(dnorm(x,180,7),from=150,to=210, main="Hustota N(180, 49)",col="red",ylab="Hustota")
# v knihovne DescTools existuje jednoducha funkce pro vypocet
MeanCI(mpg)
load("cars.RData")
View(cars)
hist(delka)
delka <- cars$Length
hist(delka)
hist(delka)
cena <- cars$Price
max(cena)
mean(cena)
cena <- cars$Price
velikostM <- cars$EngineSize
cor(cena, velikostM, method = "pearson")
typ <- cars$Type
table(typ)
addmargins(table(typ))
prop.table(table(typ)) * 100
1 - pbinom(14, 25, 0.40)
n <- 25     # Počet pokusů
p <- 0.40   # Pravděpodobnost úspěchu
k <- 14     # Největší počet úspěchů, který nechceme zahrnout
P_X_ge_15 <- 1 - pbinom(k, size = n, prob = p)
P_X_ge_15
pnorm(8, 10, 2)
sum(  dpois(1:3, 2)  )
table(pohon, naprava)
pohon <- cars$DriveTrain
naprava <- cars$Rear.seat.room
table(pohon, naprava)
prop.table(table(pohon, naprava))* 100
prop.table(table(pohon, naprava[3]))* 100
prop.table(table(pohon, naprava[,3]))* 100
hist(motor)
motor <- cars$EngineSize
hist(motor)
library(DescTools)
library(TeachingDemos)
motor <- cars$EngineSize
hist(motor)
PlotQQ(motor, pch = 19)
length(motor)
shapiro.test(motor)
Skew(motor)
Kurt(motor)
#p = 0.0001 < alfa zamitame plati H1 nema normalni rozdelení
rpm <- cars$RPM
typ <- cars$Type
oneway.test(rpm typ, var.equal = TRUE)
oneway.test(rpm , typ, var.equal = TRUE)
oneway.test(rpm ~ typ, var.equal = TRUE)
cena <- cars$Price
hp <- cars$Horsepower
plot(zavisla ~ nezavisla)
## Zavisi porodni hmotnost na porodni delce deti?
zavisla <- Kojeni$porHmotnost
nezavisla <- Kojeni$porDelka
# korelacni koeficient
cor(zavisla, nezavisla)
cor(zavisla, nezavisla)
#p = 0.0001 < alfa zamitame plati H1 nema normalni rozdelení
rpm <- cars$RPM
typ <- cars$Type
cena <- cars$Price
hp <- cars$Horsepower
zavisla <- cena
nezavisla <- hp
cor(zavisla, nezavisla)
# Je tato zavislost statisticky vyznamna?
#   H0: promenne spolu nesouvisi vs. H1: promenne spolu souvisi
cor.test(zavisla, nezavisla)
zavisla <- cena
nezavisla <- hp
plot(zavisla ~ nezavisla)
zavisla
cena <- cars$Price
hp <- cars$Horsepower
zavisla <- cena
nezavisla <- hp
plot(zavisla ~ nezavisla)
cor(zavisla, nezavisla)
abline(lm(zavisla ~ nezavisla),col=2,lwd=2)
# grafem prolozim primku
(Model1 <- lm(zavisla ~ nezavisla))
# odhad regresnich koeficientu - popis primky
# porodni hmotnost = -7905.8 + 224.8*porodni delka
#   je dulezite, ktera promenna je na x-ove a ktera na y-ove ose
# s narustem porodni delky o 1cm naroste porodni hmotnost v promeru o 224.8 g
summary(Model1)
# souhrn vystupu
# v casti Coefficients najdeme odhady regresnich koeficientu (Estimate)
#   a dale test o jejich nulovosti (kdyz je posledni hodnota v radku
#   Pr(>|t|) mensi nez 0.05, pak se koeficient vyznamne lisi od nuly,
#   a za posledni hodnotou se objevi alespon jedna hvezdicka)
# v souhrnu Multiple R-squared je procento variability zavisle promenne
#   vysvetlene modelem: z variability porodni hmotnosti se vysvetlilo 62.5%
confint(Model1)
## Zavisi porodni hmotnost na porodni delce deti?
zavisla <- Kojeni$porHmotnost
nezavisla <- Kojeni$porDelka
# grafem prolozim primku
(Model1 <- lm(zavisla ~ nezavisla))
# odhad regresnich koeficientu - popis primky
# porodni hmotnost = -7905.8 + 224.8*porodni delka
#   je dulezite, ktera promenna je na x-ove a ktera na y-ove ose
# s narustem porodni delky o 1cm naroste porodni hmotnost v promeru o 224.8 g
summary(Model1)
# souhrn vystupu
# v casti Coefficients najdeme odhady regresnich koeficientu (Estimate)
#   a dale test o jejich nulovosti (kdyz je posledni hodnota v radku
#   Pr(>|t|) mensi nez 0.05, pak se koeficient vyznamne lisi od nuly,
#   a za posledni hodnotou se objevi alespon jedna hvezdicka)
# v souhrnu Multiple R-squared je procento variability zavisle promenne
#   vysvetlene modelem: z variability porodni hmotnosti se vysvetlilo 62.5%
confint(Model1)
naprava <- cars$Rear.seat.room
naprava
pohon <- cars$DriveTrain
naprava <- cars$Rear.seat.room
pohon <- cars$DriveTrain
pohon
pohon <- cars$DriveTrain["rear"]
pohon
pohon <- cars$DriveTrain["Rear"]
pohon
pohon <- cars %>% filter(DriveTrain == "Rear")
library(dplyr)
pohon <- cars %>% filter(DriveTrain == "Rear")
pohon
hist(c ~ d)
d <- cars$DriveTrain
c <- cars$Cylinders
hist(c ~ d)
plot(c ~ d)
